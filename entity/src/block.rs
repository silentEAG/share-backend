//! SeaORM Entity. Generated by sea-orm-codegen 0.10.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "block")]
pub struct Model {
    #[serde(skip_serializing)]
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub block_name: String,
    #[sea_orm(unique)]
    pub block_uid: String,
    pub block_description: String,
    pub block_type: BlockType,
    pub block_bucket_path: String,
    pub block_format: String,
    pub block_fields: Vec<String>,
    pub create_at: Date,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Deserialize, Serialize)]
#[sea_orm(rs_type = "String", db_type = "String(Some(8))")]
#[serde(rename_all = "lowercase")]
pub enum BlockType {
    #[sea_orm(string_value = "send")]
    Send,
    #[sea_orm(string_value = "receive")]
    Receive,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
